import{_ as r,c as i,f as a,o as s}from"./app-BauT_-bS.js";const t={};function h(l,e){return s(),i("div",null,e[0]||(e[0]=[a('<h1 id="advanced-hierarchies" tabindex="-1"><a class="header-anchor" href="#advanced-hierarchies"><span>Advanced Hierarchies</span></a></h1><p>Some hierarchies are irregular or complex, requiring specialized design approaches.</p><hr><h2 id="irregular-hierarchies" tabindex="-1"><a class="header-anchor" href="#irregular-hierarchies"><span><strong>Irregular Hierarchies</strong></span></a></h2><ul><li>Example: Address hierarchy with inconsistent levels. <ul><li><strong>Scenario</strong>: Some cities have states, others have zones or districts.</li><li><strong>Solution</strong>: Propagate lower-level values to higher levels where missing.</li></ul></li></ul><hr><h2 id="recursive-hierarchies" tabindex="-1"><a class="header-anchor" href="#recursive-hierarchies"><span><strong>Recursive Hierarchies</strong></span></a></h2><ul><li>Example: Employee reporting structure. <ul><li><strong>Solution 1</strong>: Use a parent-child table to store relationships.</li><li><strong>Solution 2</strong>: Introduce an outrigger dimension for recursive attributes.</li></ul></li></ul>',8)]))}const c=r(t,[["render",h],["__file","advanced_hierarchies.html.vue"]]),o=JSON.parse('{"path":"/theme3/advanced_hierarchies.html","title":"Advanced Hierarchies","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Irregular Hierarchies","slug":"irregular-hierarchies","link":"#irregular-hierarchies","children":[]},{"level":2,"title":"Recursive Hierarchies","slug":"recursive-hierarchies","link":"#recursive-hierarchies","children":[]}],"git":{},"filePathRelative":"theme3/advanced_hierarchies.md"}');export{c as comp,o as data};
